services:
  db:
    image: postgres:14-alpine
    expose:
      - 5432
    container_name: pgdb
    volumes:
      - pg_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASSWD}
      - POSTGRES_DB=${DB}

  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - 6379
    volumes:
      - redis_data:/data
    restart: always
    networks:
        - backend

  celery:
    build: .
    container_name: celery
    command: celery -A myproject worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - backend

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A myproject beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - backend

  django:
    build: .
    container_name: django
    command: sh -c "python manage.py collectstatic --no-input &&
                    python manage.py makemigrations &&
                    python manage.py migrate &&
                    python manage.py shell < create_superuser.py &&
                    python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/project
      - static_data:/project/static
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=docker
    env_file:
      - .env.docker
    depends_on:
      - db
      - redis

volumes:
      static_data:
      pg_data:
      redis_data:

networks:
  backend:
    driver: bridge